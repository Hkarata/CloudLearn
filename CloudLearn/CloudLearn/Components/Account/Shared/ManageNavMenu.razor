@using Microsoft.AspNetCore.Identity
@using CloudLearn.Data
@inject NavigationManager NavigationManager
@inject SignInManager<ApplicationUser> SignInManager

<ul class="flex flex-col space-y-4 font-semibold text-sm uppercase">
    <li class="p-2 flex flex-row rounded @(IsActive("Account/Manage") ? "bg-amber-300" : "bg-slate-200")">
        <NavLink class="w-full" href="Account/Manage" Match="NavLinkMatch.All">Profile</NavLink>
    </li>
    <li class="p-2 flex flex-row rounded @(IsActive("Account/Manage/Email") ? "bg-amber-300" : "bg-slate-200")">
        <NavLink class="w-full" href="Account/Manage/Email">Email</NavLink>
    </li>
    <li class="p-2 flex flex-row rounded @(IsActive("Account/Manage/ChangePassword") ? "bg-amber-300" : "bg-slate-200")">
        <NavLink class="w-full" href="Account/Manage/ChangePassword">Password</NavLink>
    </li>
    @if (hasExternalLogins)
    {
        <li class="p-2 flex flex-row rounded @(IsActive("Account/Manage/ExternalLogins") ? "bg-amber-300" : "bg-slate-200")">
            <NavLink class="w-full" href="Account/Manage/ExternalLogins">External logins</NavLink>
        </li>
    }
    <li class="p-2 flex flex-row rounded @(IsActive("Account/Manage/TwoFactorAuthentication") ? "bg-amber-300" : "bg-slate-200")">
        <NavLink class="w-full" href="Account/Manage/TwoFactorAuthentication">Two-factor authentication</NavLink>
    </li>
    <li class="p-2 flex flex-row rounded @(IsActive("Account/Manage/PersonalData") ? "bg-amber-300" : "bg-slate-200")">
        <NavLink href="Account/Manage/PersonalData">Personal data</NavLink>
    </li>
</ul>

@code {
    private bool hasExternalLogins; 

    private bool IsActive(string href) => NavigationManager.Uri.Contains(href);

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }
}
